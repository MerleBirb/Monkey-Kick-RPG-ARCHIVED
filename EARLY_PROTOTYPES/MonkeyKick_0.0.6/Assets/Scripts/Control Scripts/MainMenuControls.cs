//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/Control Scripts/MainMenuControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainMenuControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainMenuControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainMenuControls"",
    ""maps"": [
        {
            ""name"": ""Main_Menu"",
            ""id"": ""080408a3-a512-4c26-ae6a-229836d468c6"",
            ""actions"": [
                {
                    ""name"": ""Start"",
                    ""type"": ""PassThrough"",
                    ""id"": ""201959a4-8ee3-4c73-8695-82f0dc00bd42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""91f0cd07-30eb-4939-9f8e-884aa2ed22fa"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0ca9950-3553-4958-a4bf-4757c62a730e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Main_Menu
        m_Main_Menu = asset.FindActionMap("Main_Menu", throwIfNotFound: true);
        m_Main_Menu_Start = m_Main_Menu.FindAction("Start", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main_Menu
    private readonly InputActionMap m_Main_Menu;
    private IMain_MenuActions m_Main_MenuActionsCallbackInterface;
    private readonly InputAction m_Main_Menu_Start;
    public struct Main_MenuActions
    {
        private @MainMenuControls m_Wrapper;
        public Main_MenuActions(@MainMenuControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Start => m_Wrapper.m_Main_Menu_Start;
        public InputActionMap Get() { return m_Wrapper.m_Main_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Main_MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMain_MenuActions instance)
        {
            if (m_Wrapper.m_Main_MenuActionsCallbackInterface != null)
            {
                @Start.started -= m_Wrapper.m_Main_MenuActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_Main_MenuActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_Main_MenuActionsCallbackInterface.OnStart;
            }
            m_Wrapper.m_Main_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
            }
        }
    }
    public Main_MenuActions @Main_Menu => new Main_MenuActions(this);
    public interface IMain_MenuActions
    {
        void OnStart(InputAction.CallbackContext context);
    }
}
